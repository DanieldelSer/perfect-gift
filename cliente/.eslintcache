[{"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\index.js":"1","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\reportWebVitals.js":"2","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\App.js":"3","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Login.js":"4","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Main.js":"5","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Register.js":"6","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Event.js":"7","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Msn.js":"8","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\GuestEvent.js":"9","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Footer.js":"10","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\PaymentForm.js":"11","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\utils.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":4376,"mtime":1612374045570,"results":"16","hashOfConfig":"14"},{"size":8554,"mtime":1612136707381,"results":"17","hashOfConfig":"14"},{"size":31555,"mtime":1612389588619,"results":"18","hashOfConfig":"14"},{"size":471,"mtime":1609366944396,"results":"19","hashOfConfig":"14"},{"size":24856,"mtime":1612391948896,"results":"20","hashOfConfig":"14"},{"size":9275,"mtime":1612203807629,"results":"21","hashOfConfig":"14"},{"size":15594,"mtime":1612397204607,"results":"22","hashOfConfig":"14"},{"size":826,"mtime":1612055102910,"results":"23","hashOfConfig":"14"},{"size":4305,"mtime":1612307329703,"results":"24","hashOfConfig":"14"},{"size":1528,"mtime":1612300675374,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"12qfotq",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\index.js",[],["58","59"],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\reportWebVitals.js",[],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\App.js",[],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Login.js",[],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Main.js",["60","61","62","63"],"import { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Badge from 'react-bootstrap/Badge'\r\nimport swal from 'sweetalert'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faSignOutAlt, faCalendarAlt, faMailBulk, faTrash, faUserCheck, faUserTimes, faBell, faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nmoment.locale('es');\r\n\r\n\r\nconst Main = (props) => {\r\n\r\n    const today = moment().format('LL');\r\n\r\n    const [mcreateEventShow, setMcreateEventShow] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const [first, setFirst] = useState(0);\r\n    const [dataGuest, setDataGuest] = useState([]);\r\n    const [iconMsn, setIconMsn] = useState(false);\r\n    const [countMsn, setCountMsn] = useState(0);\r\n    const [invite, setInvite] = useState('Todas');\r\n    const [eventSearch, setEventSearch] = useState('');\r\n    const [slider, setSlider] = useState(3);\r\n    const [slider2, setSlider2] = useState(3);\r\n\r\n    const username = props.user\r\n\r\n    console.log(props);\r\n    console.log(username);\r\n    const [eventName, setEventName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [date, setDate] = useState(moment().format('DD MMMM YYYY'));\r\n\r\n    const [pass, setPass] = useState('');\r\n    const [newPass, setNewPass] = useState('');\r\n    const [repeatNewPass, setRepeatNewPass] = useState('');\r\n\r\n    const event = {\r\n        username,\r\n        eventName,\r\n        description,\r\n        date\r\n    };\r\n\r\n    const removeEvent = {\r\n        username,\r\n    };\r\n\r\n    const search = {\r\n        username,\r\n        eventSearch\r\n    };\r\n\r\n    const deleteAlert = (_id) => {\r\n        swal({\r\n            title: \"Eliminar\",\r\n            text: \"Estás seguro que deseas eliminar este evento?\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    deleteEvent(_id)\r\n                    swal(\"El evento se ha borrado con éxito\", {\r\n                        icon: \"success\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                } else {\r\n                    swal(\"El evento no ha sido eliminado\", {\r\n                        icon: \"info\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const decisionAlert = (_id, decision, guestName, state, nameEvent) => {\r\n        swal({\r\n            title: decision,\r\n            text: `Estás seguro que deseas ${decision} este evento?`,\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    decisionEvent(_id, decision)\r\n                    sendMsn(guestName, state, nameEvent)\r\n                    swal(`El evento ha sido ${decision}`, {\r\n                        icon: \"success\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                } else {\r\n                    swal(`La decision no ha sido modificada`, {\r\n                        icon: \"info\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const modifyPassAlert = () => {\r\n        swal({\r\n            text: `Modificar contraseña?`,\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    changePass()\r\n                    setPass('');\r\n                    setNewPass('');\r\n                    setRepeatNewPass('');\r\n                    swal(\"La contraseña ha sido modificada\", {\r\n                        icon: \"success\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                } else {\r\n                    swal(`La contraseña no ha sido modificada`, {\r\n                        icon: \"info\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const errorAlert = () => {\r\n        swal({\r\n            text: \"Las contraseñas no coinciden \",\r\n            icon: \"warning\",\r\n            button: \"Aceptar\",\r\n        });\r\n    }\r\n\r\n    const createEvent = () => {\r\n\r\n        fetch(\"http://localhost:3000/events/newEvent\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(event),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                if (datos === false) {\r\n                    alert(\"Ese nombre del evento esta creado\");\r\n                } else {\r\n                    setMcreateEventShow(false)\r\n                    fetch(`http://localhost:3000/events/${username}`)\r\n                        .then(function (res) {\r\n                            return res.json();\r\n                        })\r\n                        .then(function (datos) {\r\n                            console.log(datos)\r\n                            setData(datos.reverse());\r\n                            setDate(today);\r\n                            //setFirst(first + 1)\r\n                            setFirst(datos.length)\r\n                        })\r\n                }\r\n            });\r\n    };\r\n\r\n    const deleteEvent = (_id) => {\r\n        fetch(`http://localhost:3000/events/deleteEvent/${_id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(removeEvent),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                if (datos.length === 0) {\r\n                    setFirst(first - 1)\r\n                }\r\n                setData(datos.reverse());\r\n                // setBoolean(!boolean)\r\n            });\r\n    };\r\n\r\n    const decisionEvent = (_id, decision) => {\r\n        const decisionGuest = {\r\n            _id,\r\n            username,\r\n            decision\r\n        };\r\n        fetch(`http://localhost:3000/guests/decisionEvent`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(decisionGuest),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                setDataGuest(datos.reverse());\r\n            });\r\n    };\r\n\r\n    const changePass = () => {\r\n        const password = {\r\n            username,\r\n            newPass\r\n        };\r\n        fetch(`http://localhost:3000/users/changepass`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(password),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                setDataGuest(datos.reverse());\r\n            });\r\n    };\r\n\r\n\r\n    // const searchEvent = () => {\r\n\r\n\r\n    //     fetch(`http://localhost:3000/events/search/event/mas`, {\r\n    //         method: \"POST\",\r\n    //         headers: {\r\n    //             \"Content-Type\": \"application/json\",\r\n    //         },\r\n    //         body: JSON.stringify(search),\r\n    //     })\r\n    //         .then(function (res) {\r\n    //             return res.json();\r\n    //         })\r\n    //         .then(function (data) {\r\n    //             setData(data.reverse());\r\n    //             console.log(data);\r\n    //         });\r\n    // };\r\n\r\n    const convertDateFormat = (string) => {\r\n        return string.split('-').reverse().join('-');\r\n    }\r\n\r\n    function viewPassword(id)\r\n{\r\n  let passwordInput = document.getElementById(id);\r\n  let passStatus = document.getElementById(id);\r\n \r\n  if (passwordInput.type == 'password'){\r\n    passwordInput.type='text';\r\n    passStatus.icon= {faEyeSlash};\r\n    \r\n  }\r\n  else{\r\n    passwordInput.type='password';\r\n    passStatus.icon={faEye};\r\n  }\r\n}\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:3000/events/search/event/mas`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(search),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n\r\n                setFirst(datos.length)\r\n                setData(datos.reverse());\r\n            })\r\n        fetch(`http://localhost:3000/guests/${username}`)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                //console.log(datos);\r\n                setDataGuest(datos.reverse());\r\n            })\r\n        fetch(`http://localhost:3000/msn/state/${username}`)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                if (datos.length > 0) {\r\n                    setIconMsn(true);\r\n                    setCountMsn(datos.length)\r\n                }\r\n            })\r\n    }, [first, eventSearch]);\r\n\r\n    const fristEvent =\r\n        <div>\r\n            <OverlayTrigger\r\n                key='bottom'\r\n                placement='bottom'\r\n                overlay={\r\n                    <Tooltip id={`tooltip-bottom`}>\r\n                        Crear primer <strong>Evento</strong>.\r\n                                        </Tooltip>\r\n                }\r\n            >\r\n                <p variant=\"secondary\"><FontAwesomeIcon icon={faPlus} size=\"7x\" className=\"faPlus\" onClick={() => setMcreateEventShow(true)} style={{ color: '#C0C0C0' }} /></p>\r\n            </OverlayTrigger>\r\n        </div>;\r\n\r\n    const showEvents = data.map((event) => {\r\n        return (\r\n            <item>\r\n                <div className=\"tarjeta\" key={event.eventName}>\r\n                    <Link to={`/Main/${event.eventName}`}>\r\n                        <div className=\"cabecera\">\r\n                            <div className=\"foto\">\r\n                                <FontAwesomeIcon icon={faCalendarAlt} size=\"3x\" className=\"faPlus\" />\r\n                            </div>\r\n                            <div className=\"nombre\">\r\n                                <h1>{event.eventName}</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"texto\">\r\n                            <p className=\"texto\"><span className=\"upper\"> {convertDateFormat(event.date)}</span></p>\r\n                        </div>\r\n                        <div className=\"texto\">\r\n                            <p className=\"texto\">{event.description}</p>\r\n                        </div></Link>\r\n                    <div className=\"footer\">\r\n                        <div>\r\n                            <OverlayTrigger\r\n                                key='bottom'\r\n                                placement='bottom'\r\n                                overlay={\r\n                                    <Tooltip id={`tooltip-bottom`}>\r\n                                        Eliminiar <strong>Evento</strong>.\r\n                                        </Tooltip>\r\n                                }\r\n                            >\r\n                                <p variant=\"secondary\"><FontAwesomeIcon icon={faTrash} size=\"2x\" className=\"faPlus\" onClick={() => deleteAlert(event._id)} style={{ color: '#C0C0C0' }} /></p>\r\n                            </OverlayTrigger>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr></hr>\r\n            </item >\r\n        );\r\n    });\r\n\r\n    const estados = {\r\n        ACEPTAR: \"Aceptar\",\r\n        RECHAZAR: \"Rechazar\",\r\n        PENDIENTE: \"Pendiente\",\r\n        TODAS: \"Todas\",\r\n    };\r\n    const showGuestEvents = dataGuest.map((eventGuest) => {\r\n        if (invite === eventGuest.state || invite === estados.TODAS) {\r\n            switch (eventGuest.state) {\r\n                case estados.ACEPTAR:\r\n                    return (\r\n                        <item>\r\n                            <div className=\"tarjeta\" key={eventGuest.eventName}>\r\n                                <Link to={`/Invitado/${eventGuest.eventName}`}>\r\n                                    <div className=\"cabecera\">\r\n                                        <div className=\"foto\">\r\n                                            <FontAwesomeIcon icon={faMailBulk} size=\"3x\" className=\"faPlus2\" />\r\n                                        </div>\r\n                                        <div className=\"nombre\">\r\n                                            <h1>Anfitrión: {eventGuest.user}</h1>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"texto\">\r\n                                        <h3 className=\"texto\">{eventGuest.eventName}</h3>\r\n                                        <p className=\"texto\">Estado: <span className=\"upper\">{eventGuest.state}</span></p>\r\n                                    </div></Link>\r\n                            </div>\r\n                            <hr></hr>\r\n                        </item>\r\n                    );\r\n                case estados.RECHAZAR:\r\n                    return (\r\n                        <item>\r\n                            <div className=\"tarjetamsn\" key={eventGuest.eventName}>\r\n\r\n                                <div className=\"cabecera\">\r\n                                    <div className=\"foto\">\r\n                                        <FontAwesomeIcon icon={faMailBulk} size=\"3x\" className=\"faPlus2\" />\r\n                                    </div>\r\n                                    <div className=\"nombre\">\r\n                                        <h1>Anfitrión: {eventGuest.user}</h1>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"texto\">\r\n                                    <h3 className=\"texto\">{eventGuest.eventName}</h3>\r\n                                    <p className=\"texto\">Estado: <span className=\"upper\">{eventGuest.state}</span></p>\r\n                                </div>\r\n                            </div>\r\n                            <hr></hr>\r\n                        </item>\r\n                    );\r\n                case estados.PENDIENTE:\r\n                    return (\r\n                        <item>\r\n                            <div className=\"tarjetamsn\" key={eventGuest.eventName}>\r\n                                <div className=\"cabecera\">\r\n                                    <div className=\"foto\">\r\n                                        <FontAwesomeIcon icon={faMailBulk} size=\"3x\" className=\"faPlus2\" />\r\n                                    </div>\r\n                                    <div className=\"nombre\">\r\n                                        <h1>Anfitrión: {eventGuest.user}</h1>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"texto\">\r\n                                    <h3 className=\"texto\">{eventGuest.eventName}</h3>\r\n                                    <p className=\"texto\">Estado: <span className=\"upper\">{eventGuest.state}</span></p>\r\n                                </div>\r\n                                <div className=\"footer\">\r\n                                    <OverlayTrigger\r\n                                        key='bottom'\r\n                                        placement='bottom'\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-bottom`}>\r\n                                                <strong>Aceptar</strong>.\r\n                                                    </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <p variant=\"secondary\"><FontAwesomeIcon icon={faUserCheck} size=\"2x\" className=\"faPlus\" onClick={() => decisionAlert(eventGuest._id, \"Aceptar\", eventGuest.user, \"aceptado\", eventGuest.eventName)} style={{ color: '#C0C0C0' }} /></p>\r\n                                    </OverlayTrigger>\r\n                                    <OverlayTrigger\r\n                                        key='bottom'\r\n                                        placement='bottom'\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-bottom`}>\r\n                                                <strong>Rechazar</strong>.\r\n                                                    </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <p variant=\"secondary\"><FontAwesomeIcon icon={faUserTimes} size=\"2x\" className=\"faPlus\" onClick={() => decisionAlert(eventGuest._id, \"Rechazar\", eventGuest.user, \"rechazado\", eventGuest.eventName)} style={{ color: '#C0C0C0' }} /></p>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                            <hr></hr>\r\n                        </item>\r\n                    );\r\n            }\r\n        }\r\n    });\r\n\r\n    const sendMsn = (guestName, state, nameEvent) => {\r\n\r\n        const newMsn = {\r\n            username: guestName,\r\n            guestName: username,\r\n            userText: `Ha ${state} tu invitación para ${nameEvent}`,\r\n            today\r\n        };\r\n\r\n        fetch(`http://localhost:3000/msn/newMsn/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newMsn),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n\r\n            });\r\n    };\r\n\r\n    const manageChangeEventName = (e) => {\r\n        setEventName(e.target.value);\r\n    };\r\n    const manageChangeDescription = (e) => {\r\n        setDescription(e.target.value);\r\n    };\r\n    const manageChangeDate = (e) => {\r\n        setDate(e.target.value);\r\n    };\r\n    const manageChangePass = (e) => {\r\n        setPass(e.target.value);\r\n    };\r\n    const manageChangeNewPass = (e) => {\r\n        setNewPass(e.target.value);\r\n    };\r\n    const manageChangeRepeatNewPass = (e) => {\r\n        setRepeatNewPass(e.target.value);\r\n    };\r\n    const manageChangeInvite = (e) => {\r\n        setInvite(e.target.value);\r\n    };\r\n    const manageChangeSearch = (e) => {\r\n        setEventSearch(e.target.value);\r\n    };\r\n    const manageChangeSlider = (e) => {\r\n        setSlider(e.target.value);\r\n    };\r\n    const manageChangeSlider2 = (e) => {\r\n        setSlider2(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"containerModal\">\r\n                <header>\r\n                    <nav>\r\n                        <ul>\r\n                            <div className=\"imgNav\">\r\n                                <img src=\"./LogoPG.png\" alt=\"Perfect Gift\"></img>\r\n                                {today}\r\n                            </div>\r\n                            <div>\r\n                                <h1 className=\"username\">{username}</h1>\r\n                            </div>\r\n                            <div className=\"navIcons\">\r\n                                <div>\r\n                                    <OverlayTrigger\r\n                                        key='bottom'\r\n                                        placement='bottom'\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-bottom`}>\r\n                                                Crear <strong>Evento</strong>.\r\n                                        </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <p variant=\"secondary\"><FontAwesomeIcon icon={faPlus} size=\"3x\" className=\"faPlus\" onClick={() => setMcreateEventShow(true)} style={{ color: '#C0C0C0' }} /></p>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                                <div>\r\n                                    <OverlayTrigger\r\n                                        key='bottom'\r\n                                        placement='bottom'\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-bottom`}>\r\n                                                <strong>Notificaciones</strong>.\r\n                                        </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        {iconMsn\r\n                                            ? <Link to=\"/msn\"><p variant=\"secondary\"><FontAwesomeIcon icon={faBell} size=\"3x\" className=\"faPlus2\" /><Badge variant=\"danger\">{countMsn}</Badge></p></Link>\r\n                                            : <Link to=\"/msn\"><p variant=\"secondary\"><FontAwesomeIcon icon={faBell} size=\"3x\" className=\"faPlus\" /></p></Link>\r\n                                        }\r\n\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                                <div>\r\n                                    <OverlayTrigger\r\n                                        key='bottom'\r\n                                        placement='bottom'\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-bottom`}>\r\n                                                <strong>Salir</strong>.\r\n                                        </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <Link to={`/`}><p variant=\"secondary\"><FontAwesomeIcon icon={faSignOutAlt} size=\"3x\" className=\"faPlus\" onClick={() => { props.back() }} style={{ color: '#C0C0C0' }} /></p></Link>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                        </ul>\r\n                    </nav>\r\n                </header>\r\n\r\n                <hr></hr>\r\n                <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"justify-content-center\">\r\n                    <Tab eventKey=\"profile\" title=\"Mis Eventos\">\r\n                        <div className=\"centrartab\">\r\n                            <hr></hr>\r\n                            <h3 className=\"username\">Mis Eventos</h3>\r\n                            <hr></hr>\r\n                            <div className=\"login-box2\">\r\n                                <div className=\"user-box\">\r\n                                    <input type=\"text\" onChange={manageChangeSearch}></input>\r\n                                    <label>Buscar</label>\r\n                                    <div className=\"user-box2\">\r\n                                        <select className=\"user-box2 marginR\" onChange={manageChangeSlider}>\r\n                                            <option value=\"0\"></option>\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                                            <option>6</option>\r\n                                        </select>\r\n                                        <label className=\"mostrar\">Mostrar</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr></hr>\r\n                            {first === 0\r\n                                ? <Carousel itemsToShow={slider} itemPadding={[10, 50]}>\r\n                                    {fristEvent}\r\n                                </Carousel>\r\n                                : <Carousel itemsToShow={slider} itemPadding={[10, 50]}>\r\n                                    {showEvents}\r\n                                </Carousel>\r\n                            }\r\n                            <hr></hr>\r\n                        </div>\r\n                    </Tab>\r\n                    <Tab eventKey=\"home\" title=\"Mis Invitaciones\">\r\n                        <div className=\"centrartab\">\r\n                            <hr></hr>\r\n                            <h3 className=\"username\">Mis Invitaciones</h3>\r\n                            <hr></hr>\r\n                            <div className=\"login-box2\">\r\n                                <div className=\"user-box\">\r\n                                    <select className=\"user-box\" onChange={manageChangeInvite}>\r\n                                        <option>Todas</option>\r\n                                        <option>Pendiente</option>\r\n                                        <option>Aceptar</option>\r\n                                        <option>Rechazar</option>\r\n                                    </select>\r\n                                    <div className=\"user-box2\">\r\n                                        <select className=\"user-box2 marginR\" onChange={manageChangeSlider2}>\r\n                                            <option value=\"0\"></option>\r\n                                            <option>1</option>\r\n                                            <option>2</option>\r\n                                            <option>3</option>\r\n                                            <option>4</option>\r\n                                            <option>5</option>\r\n                                            <option>6</option>\r\n                                        </select>\r\n                                        <label className=\"mostrar\">Mostrar</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <Carousel itemsToShow={slider2} itemPadding={[10, 50]}>\r\n                                {showGuestEvents}\r\n                            </Carousel>\r\n                            <hr></hr>\r\n                        </div>\r\n                    </Tab>\r\n                    <Tab eventKey=\"contact\" title=\"Cuenta\">\r\n                        <div className=\"centrartab\">\r\n                            <hr></hr>\r\n                            <h3 className=\"username\">Modificar contraseña</h3>\r\n                            <hr></hr>\r\n                            <div className=\"tarjeta2\">\r\n                                <div className=\"cabecera2\">\r\n                                    <label>Contraseña</label>\r\n                                    <span variant=\"secondary\"><FontAwesomeIcon icon={faEye} size=\"1x\" className=\"faPlus\" id=\"pass-status\" onMouseDown={() => viewPassword(\"password-field\")} onMouseUp={() => viewPassword(\"password-field\")} style={{ color: '#C0C0C0' }} /></span>\r\n                                    <input type=\"password\" value={pass} id=\"password-field\" onChange={manageChangePass}></input>\r\n                                    <label>Nueva contraseña</label>\r\n                                    <span variant=\"secondary\"><FontAwesomeIcon icon={faEye} size=\"1x\" className=\"faPlus\" id=\"pass-status\" onMouseDown={() => viewPassword(\"password-new\")} onMouseUp={() => viewPassword(\"password-new\")} style={{ color: '#C0C0C0' }} /></span>\r\n                                    <input type=\"password\" value={newPass} id=\"password-new\" onChange={manageChangeNewPass}></input>\r\n                                    <label>Repetir contraseña   </label>\r\n                                    <span variant=\"secondary\"><FontAwesomeIcon icon={faEye} size=\"1x\" className=\"faPlus\" id=\"pass-status\" onMouseDown={() => viewPassword(\"password-newRepeat\")} onMouseUp={() => viewPassword(\"password-newRepeat\")} style={{ color: '#C0C0C0' }} /></span>\r\n                                    <input type=\"password\" value={repeatNewPass} id=\"password-newRepeat\" onChange={manageChangeRepeatNewPass}></input>\r\n                                </div>\r\n                                <button type=\"button\" className=\"btn btn-outline-danger btn-lg naranja\" onClick={() => {\r\n                                    if (newPass === repeatNewPass) {\r\n                                        modifyPassAlert();\r\n                                    } else {\r\n                                        errorAlert();\r\n                                    }\r\n                                }}>Modificar</button>\r\n                            </div>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n            <div>\r\n                <Modal\r\n                    size=\"sm\"\r\n                    show={mcreateEventShow}\r\n                    onHide={() => setMcreateEventShow(false)}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <div>\r\n                        <div className=\"login-box\">\r\n                            <h2>Crear Evento</h2>\r\n                            <form>\r\n                                <div className=\"user-box\">\r\n                                    <input type=\"text\" id=\"eventName\" onChange={manageChangeEventName} ></input>\r\n                                    <label>Nombre</label>\r\n                                </div>\r\n                                <div className=\"user-box\">\r\n                                    <textarea type=\"text area\" id=\"description\" onChange={manageChangeDescription}></textarea>\r\n                                    <label>Descripción</label>\r\n                                </div>\r\n                                <div className=\"user-box\">\r\n                                    <input type=\"date\" id=\"date\" value={date} onChange={manageChangeDate}></input>\r\n                                    <label>Fecha</label>\r\n                                </div>\r\n                                <button type=\"button\" className=\"btn btn-outline-primary btn-lg naranjaModal\" data-toggle=\"modal\" data-target=\"#modalLogin\" onClick={() => createEvent()}>Crear</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Main;","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Register.js",[],["64","65"],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Event.js",["66"],"import { useParams, Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport swal from 'sweetalert'\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport Carousel from 'react-elastic-carousel'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt, faChevronCircleRight, faGift, faUserFriends, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport './App.css';\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nmoment.locale('es');\r\n\r\nconst Event = (props) => {\r\n\r\n    const { event } = useParams();\r\n    //console.log(props.user[0].username);\r\n    const today = moment().format('LL');\r\n\r\n    const [maddGuestShow, setMaddGuestShow] = useState(false);\r\n    const [mcreateGiftShow, setMcreateGiftShow] = useState(false);\r\n\r\n    const [data, setData] = useState([]);\r\n    const [guests, setGuests] = useState([]);\r\n    const [gifts, setGifts] = useState([]);\r\n    const [first, setFirst] = useState(0);\r\n    const [firstGift, setFirstGift] = useState(0);\r\n\r\n    const username = props.user\r\n    const [eventName, setEventName] = useState('');\r\n    const [guestName, setGuestName] = useState('');\r\n    const [guestEmail, setGuestEmail] = useState('');\r\n    // const [guestAwardName, setGuestAwardName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [giftRank, setGiftRank] = useState('');\r\n    const [giftPrice, setGiftPrice] = useState('');\r\n\r\n    const eventGuest = {\r\n        username,\r\n        eventName,\r\n        guestName,\r\n        guestEmail\r\n    };\r\n\r\n    const sendEmail = {\r\n        username,\r\n        guestName,\r\n        guestEmail\r\n    };\r\n\r\n    const newGift = {\r\n        username,\r\n        eventName,\r\n        description,\r\n        giftRank,\r\n        giftPrice\r\n    };\r\n\r\n    const removeGift = {\r\n        username,\r\n        eventName\r\n    };\r\n\r\n    const removeGuest = {\r\n        username,\r\n        eventName\r\n    };\r\n\r\n    const newMsn = {\r\n        username: guestName,\r\n        guestName: username,\r\n        userText: `Te ha invitado al evento ${event}`,\r\n        today\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:3000/events/${username}/${event}`)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (res) {\r\n                setData(res)\r\n                setEventName(res[0].eventName)\r\n            });\r\n        fetch(`http://localhost:3000/guests/${username}/${event}`)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (res) {\r\n                setGuests(res)\r\n                setFirst(res.length)\r\n                console.log(res.length);\r\n            });\r\n        fetch(`http://localhost:3000/gifts/${username}/${event}`)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (res) {\r\n                setGifts(res)\r\n                setFirstGift(res.length)\r\n                console.log(res.length);\r\n            });\r\n    }, []);\r\n\r\n    const deleteAlertGuest = (_id, info) => {\r\n        swal({\r\n            title: \"Eliminar\",\r\n            text: `Estás seguro que deseas eliminar este ${info}?`,\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    deleteGuest(_id)\r\n                    swal(`El ${info} se ha eliminado con éxito`, {\r\n                        icon: \"success\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                } else {\r\n                    swal(`El ${info} no ha sido eliminado`, {\r\n                        icon: \"info\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                }\r\n            });\r\n    };\r\n    const deleteAlertGift = (_id, info) => {\r\n        swal({\r\n            title: \"Eliminar\",\r\n            text: `Estás seguro que deseas eliminar este ${info}?`,\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    deleteGift(_id)\r\n                    swal(`El ${info} se ha eliminado con éxito`, {\r\n                        icon: \"success\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                } else {\r\n                    swal(`El ${info} no ha sido eliminado`, {\r\n                        icon: \"info\",\r\n                        button: false,\r\n                        timer: \"1500\"\r\n                    });\r\n                }\r\n            });\r\n    };\r\n\r\n    const createAlert = (info) => {\r\n        swal(info, {\r\n            icon: \"success\",\r\n            button: false,\r\n            timer: \"1500\"\r\n        });\r\n    }\r\n\r\n    const convertDateFormat = (string) => {\r\n        return string.split('-').reverse().join('-');;\r\n    }\r\n\r\n    const manageChangeGuestName = (e) => {\r\n        setGuestName(e.target.value);\r\n    };\r\n    const manageChangeGuestEmail = (e) => {\r\n        setGuestEmail(e.target.value);\r\n    };\r\n    const manageChangeGiftDescription = (e) => {\r\n        setDescription(e.target.value);\r\n    };\r\n    // const manageChangeGiftRank = (e) => {\r\n    //     setGiftRank(e.target.value);\r\n    // };\r\n    const manageChangeGiftPrice = (e) => {\r\n        setGiftPrice(e.target.value);\r\n    };\r\n\r\n\r\n\r\n    const addGuest = () => {\r\n\r\n        fetch(\"http://localhost:3000/guests/newGuest\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(eventGuest),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                if (datos === false) {\r\n                    alert(\"Ese invitado ya está añadido\");\r\n                } else {\r\n                    createAlert(\"Invitado\");\r\n                    setMaddGuestShow(false)\r\n                    setGuests(datos);\r\n                    setFirst(datos.length)\r\n                    console.log(datos.length);\r\n                    fetch(`http://localhost:3000/send-email/`, {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        },\r\n                        body: JSON.stringify(sendEmail),\r\n                    })\r\n                        .then(function (res) {\r\n                            return res.json();\r\n                        })\r\n                        .then(function (datos) {\r\n\r\n                        });\r\n                };\r\n            });\r\n    };\r\n\r\n    const createGift = () => {\r\n\r\n        fetch(`http://localhost:3000/gifts/newGift/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newGift),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                if (datos === false) {\r\n                    alert(\"El regalo ya esta creado\");\r\n                } else {\r\n                    createAlert(\"Regalo Creado\");\r\n                    setGifts(datos);\r\n                    setFirstGift(datos.length);\r\n                    setMcreateGiftShow(false);\r\n                    console.log(datos.length);\r\n                }\r\n            });\r\n    };\r\n    const sendMsn = () => {\r\n\r\n        fetch(`http://localhost:3000/msn/newMsn/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newMsn),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n\r\n            });\r\n    };\r\n\r\n    const deleteGift = (_id) => {\r\n        fetch(`http://localhost:3000/gifts/deleteGift/${_id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(removeGift),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                //console.log(datos);\r\n                setGifts(datos)\r\n                setFirstGift(firstGift - 1)\r\n            });\r\n    };\r\n\r\n    const deleteGuest = (_id) => {\r\n        fetch(`http://localhost:3000/guests/deleteGuest/${_id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(removeGuest),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                setGuests(datos)\r\n                setFirst(first - 1)\r\n                console.log(first);\r\n            });\r\n    };\r\n\r\n    const fristGuest =\r\n\r\n        <div>\r\n            <OverlayTrigger\r\n                key='bottom'\r\n                placement='bottom'\r\n                overlay={\r\n                    <Tooltip id={`tooltip-bottom`}>\r\n                        Añadir <strong>invitado</strong>.\r\n                                        </Tooltip>\r\n                }\r\n            >\r\n                <p variant=\"secondary\"><FontAwesomeIcon icon={faUserFriends} size=\"7x\" className=\"faPlus\" onClick={() => setMaddGuestShow(true)} style={{ color: '#C0C0C0' }} /></p>\r\n            </OverlayTrigger>\r\n        </div>\r\n\r\n    const showfirstGift =\r\n\r\n        <div>\r\n            <OverlayTrigger\r\n                key='bottom'\r\n                placement='bottom'\r\n                overlay={\r\n                    <Tooltip id={`tooltip-bottom`}>\r\n                        Crear <strong>regalo</strong>.\r\n                                        </Tooltip>\r\n                }\r\n            >\r\n                <p variant=\"secondary\"><FontAwesomeIcon icon={faGift} size=\"7x\" className=\"faPlus\" onClick={() => setMcreateGiftShow(true)} style={{ color: '#C0C0C0' }} /></p>\r\n            </OverlayTrigger>\r\n        </div>\r\n\r\n    const showEvent = data.map((eventPrint) => {\r\n        return (\r\n            <div className=\"usernameevent\" key={eventPrint.eventName}>\r\n                <h3>{eventPrint.eventName}</h3>\r\n                <p><span>{eventPrint.description}</span></p>\r\n                <p><span>{convertDateFormat(eventPrint.date)}</span></p>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const printStar = (star) => {\r\n        const firstStar = {\r\n            size: 30,\r\n            value: star,\r\n            color: \"#C0C0C0\",\r\n            activeColor: \"#E18A07\",\r\n\r\n            edit: false\r\n        };\r\n        return (\r\n            <ReactStars {...firstStar} />\r\n        )\r\n    };\r\n\r\n    const ratingStar = {\r\n        size: 40,\r\n        count: 5,\r\n        isHalf: false,\r\n        value: 0,\r\n        classNames: \"star\",\r\n        color: \"#C0C0C0\",\r\n        activeColor: \"#E18A07\",\r\n        onChange: newValue => {\r\n            setGiftRank(newValue)\r\n            //console.log(newValue);\r\n        }\r\n    };\r\n\r\n    const showGuests = guests.map((guest) => {\r\n        return (\r\n            <item>\r\n                <div className=\"tarjeta\" key={guest.guestName}>\r\n                    <div className=\"cabecera\">\r\n                        <div className=\"foto\">\r\n                            <FontAwesomeIcon icon={faUserFriends} size=\"3x\" className=\"faPlus2\" />\r\n                        </div>\r\n                        <div className=\"nombre\">\r\n                            <h3>{guest.guestName}</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"texto\">\r\n                        <p className=\"texto\">Estado: <span>{guest.state}</span></p>\r\n                    </div>\r\n                    <div className=\"footer\">\r\n                        <div>\r\n                            <OverlayTrigger\r\n                                key='bottom'\r\n                                placement='bottom'\r\n                                overlay={\r\n                                    <Tooltip id={`tooltip-bottom`}>\r\n                                        <strong>Eliminiar</strong>.\r\n                                        </Tooltip>\r\n                                }\r\n                            >\r\n                                <p variant=\"secondary\"><FontAwesomeIcon icon={faTrash} size=\"2x\" className=\"faPlus\" onClick={() => { deleteAlertGuest(guest._id, \"invitado\") }} style={{ color: '#C0C0C0' }} /></p>\r\n                            </OverlayTrigger>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                </div>\r\n            </item>\r\n        );\r\n    });\r\n\r\n    const showGifts = gifts.map((gift) => {\r\n        return (\r\n            <item>\r\n                <div className=\"tarjeta\" key={gift.description}>\r\n                    <div className=\"cabecera\">\r\n                        <div className=\"foto\">\r\n                            <FontAwesomeIcon icon={faGift} size=\"3x\" className=\"faPlus2\" />\r\n                        </div>\r\n                        <div className=\"nombre\">\r\n                            <h3>{gift.description}</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"texto\">\r\n                        <h5>Asignado: <span className=\"upper\">{gift.state}</span></h5>\r\n                        {printStar(gift.rank)}\r\n                        <p className=\"texto\">Precio: <span className=\"upper\">{gift.price}€</span></p>\r\n                    </div>\r\n                    <div className=\"footer\">\r\n                        <div>\r\n                            <OverlayTrigger\r\n                                key='bottom'\r\n                                placement='bottom'\r\n                                overlay={\r\n                                    <Tooltip id={`tooltip-bottom`}>\r\n                                        <strong>Eliminiar</strong>.\r\n                                        </Tooltip>\r\n                                } >\r\n                                <p variant=\"secondary\"><FontAwesomeIcon icon={faTrash} size=\"2x\" className=\"faPlus\" onClick={() => { deleteAlertGift(gift._id, \"regalo\") }} style={{ color: '#C0C0C0' }} /></p>\r\n                            </OverlayTrigger>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr></hr>\r\n            </item>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className=\"containerModal\">\r\n                <header>\r\n                    <nav>\r\n                        <ul>\r\n                            <Link to={`/Main`}><div className=\"imgNav\">\r\n                                <img src=\"../LogoPG.png\" alt=\"Perfect Gift\"></img>\r\n                                {today}\r\n                            </div></Link>\r\n                            <div>\r\n                                <h1 className=\"username\">{username}</h1>\r\n                            </div>\r\n                            <div className=\"navIcons\">\r\n                                <div>\r\n                                    <OverlayTrigger\r\n                                        key='bottom'\r\n                                        placement='bottom'\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-bottom`}>\r\n                                                Añadir <strong>Invitado</strong>.\r\n                                        </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <p variant=\"secondary\"><FontAwesomeIcon icon={faUserFriends} size=\"3x\" className=\"faPlus\" onClick={() => setMaddGuestShow(true)} style={{ color: '#C0C0C0' }} /></p>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                                <div>\r\n                                    <OverlayTrigger\r\n                                        key='bottom'\r\n                                        placement='bottom'\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-bottom`}>\r\n                                                Crear <strong>Regalo</strong>.\r\n                                        </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <p variant=\"secondary\"><FontAwesomeIcon icon={faGift} size=\"3x\" className=\"faPlus\" onClick={() => setMcreateGiftShow(true)} style={{ color: '#C0C0C0' }} /></p>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                                <div>\r\n                                    <OverlayTrigger\r\n                                        key='bottom'\r\n                                        placement='bottom'\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-bottom`}>\r\n                                                <strong>Menú Principal</strong>.\r\n                                        </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <Link to={`/Main`}><p variant=\"secondary\"><FontAwesomeIcon icon={faChevronCircleRight} size=\"3x\" className=\"faPlus\" style={{ color: '#C0C0C0' }} /></p></Link>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                                <div>\r\n                                    <OverlayTrigger\r\n                                        key='bottom'\r\n                                        placement='bottom'\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-bottom`}>\r\n                                                <strong>Salir</strong>.\r\n                                        </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <Link to={`/`}><p variant=\"secondary\"><FontAwesomeIcon icon={faSignOutAlt} size=\"3x\" className=\"faPlus\" onClick={() => { props.back() }} style={{ color: '#C0C0C0' }} /></p></Link>\r\n                                    </OverlayTrigger>\r\n                                </div>\r\n                            </div>\r\n                        </ul>\r\n                    </nav>\r\n                </header>\r\n                <div className=\"justify-content-center\">\r\n                    {showEvent}\r\n                </div>\r\n                <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"justify-content-center margen\">\r\n                    <Tab eventKey=\"profile\" title=\"Invitados\">\r\n                        <div className=\"centrartab\">\r\n                            <hr></hr>\r\n                            <h3 className=\"username\">Invitados</h3>\r\n                            <hr></hr>\r\n                            {first === 0\r\n                                ? <Carousel itemsToShow={3} itemPadding={[10, 50]}>\r\n                                    {fristGuest}\r\n                                </Carousel>\r\n                                : <Carousel itemsToShow={3} itemPadding={[10, 50]}>\r\n                                    {showGuests}\r\n                                </Carousel>\r\n                            }\r\n                            <hr></hr>\r\n                        </div>\r\n                    </Tab>\r\n                    <Tab eventKey=\"home\" title=\"Regalos\">\r\n                        <div className=\"centrartab\">\r\n                            <hr></hr>\r\n                            <h3 className=\"username\">Regalos</h3>\r\n                            <hr></hr>\r\n                            {firstGift === 0\r\n                                ? <Carousel itemsToShow={3} itemPadding={[10, 50]}>\r\n                                    {showfirstGift}\r\n                                </Carousel>\r\n                                : <Carousel itemsToShow={3} itemPadding={[10, 50]}>\r\n                                    {showGifts}\r\n                                </Carousel>\r\n                            }\r\n                            <hr></hr>\r\n                        </div>\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n            <div className=\"justify-content-center\">\r\n                <Modal\r\n                    size=\"sm\"\r\n                    show={maddGuestShow}\r\n                    onHide={() => setMaddGuestShow(false)}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <div>\r\n                        <div className=\"login-box\">\r\n                            <h2>Añadir Invitado</h2>\r\n                            <form>\r\n                                <div className=\"user-box\">\r\n                                    <input type=\"text\" onChange={manageChangeGuestName}></input>\r\n                                    <label>Nombre</label>\r\n                                </div>\r\n                                <div className=\"user-box\">\r\n                                    <input type=\"text\" onChange={manageChangeGuestEmail}></input>\r\n                                    <label>Email</label>\r\n                                </div>\r\n                                <button type=\"button\" className=\"btn btn-outline-primary btn-lg naranjaModal\" data-toggle=\"modal\" data-target=\"#modalLogin\" onClick={() => { addGuest(); sendMsn(); }}>Añadir</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <Modal\r\n                    size=\"sm\"\r\n                    show={mcreateGiftShow}\r\n                    onHide={() => setMcreateGiftShow(false)}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <div>\r\n                        <div className=\"login-box\">\r\n                            <h2>Crear Regalo</h2>\r\n                            <form>\r\n                                {/* <div className=\"user-box\">\r\n                                    <input type=\"text\" onChange={manageChangeGuestAwardName}></input>\r\n                                    <label>Asignar regalo</label>\r\n                                </div> */}\r\n                                <div className=\"user-box\">\r\n                                    <input type=\"text\" onChange={manageChangeGiftDescription}></input>\r\n                                    <label>Nombre</label>\r\n                                </div>\r\n                                <div className=\"user-box\">\r\n                                    <input type=\"text\" onChange={manageChangeGiftPrice}></input>\r\n                                    <label>Precio</label>\r\n                                </div>\r\n                                {/* <div className=\"user-box\">\r\n                                    <select className=\"user-box\" onChange={manageChangeGiftRank}>\r\n                                        <option>Nivel de importancia</option>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </select>\r\n                                </div> */}\r\n                                <div className=\"user-box\">\r\n                                    <label>Valor</label>\r\n                                    <ReactStars {...ratingStar} />\r\n                                </div>\r\n\r\n                                <button type=\"button\" className=\"btn btn-outline-primary btn-lg naranjaModal\" data-toggle=\"modal\" data-target=\"#modalLogin\" onClick={() => createGift()}>Crear</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\nexport default Event;","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Msn.js",[],"C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\GuestEvent.js",["67"],"import { Link, useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSignOutAlt, faChevronCircleRight, faGift, faUserFriends, faCheckCircle, faTimesCircle, faCreditCard } from \"@fortawesome/free-solid-svg-icons\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Carousel from 'react-elastic-carousel';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nmoment.locale('es');\r\n\r\nconst GuestEvent = (props) => {\r\n\r\n    const today = moment().format('LL');\r\n\r\n    const { event } = useParams();\r\n    const username = props.user\r\n\r\n    \r\n    const [data, setData] = useState([]);\r\n    const [mpayShow, setMpayShow] = useState(false);\r\n\r\n    const [guests, setGuests] = useState([]);\r\n    const [gifts, setGifts] = useState([]);\r\n    //const [choose, setChoose] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:3000/events/invitado/${event}`)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (res) {\r\n                setData(res)\r\n            });\r\n        fetch(`http://localhost:3000/guests/invited/mas/${event}`)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (res) {\r\n                console.log(event);\r\n                console.log(res);\r\n                setGuests(res)\r\n            });\r\n        fetch(`http://localhost:3000/gifts/invited/mas/${event}`)\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (res) {\r\n                setGifts(res)\r\n                console.log(gifts);\r\n            });\r\n    }, []);\r\n\r\n    const chooseGift = (_id) => {\r\n        const gift = {\r\n            _id,\r\n            username,\r\n            event\r\n        };\r\n        fetch(`http://localhost:3000/gifts/chooseGift`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(gift),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n                setGifts(datos.reverse());\r\n                console.log(gifts);\r\n                //setChoose(choose + 1)\r\n            });\r\n    };\r\n\r\n    const sendMsn = (to, description) => {\r\n\r\n        const newMsn = {\r\n            username: to,\r\n            guestName: username,\r\n            userText: `${username} ha elgido el regalo ${description} en el evento ${event}`,\r\n            today\r\n        };\r\n\r\n        fetch(`http://localhost:3000/msn/newMsn/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(newMsn),\r\n        })\r\n            .then(function (res) {\r\n                return res.json();\r\n            })\r\n            .then(function (datos) {\r\n\r\n            });\r\n    };\r\n\r\n    const convertDateFormat = (string) => {\r\n        return string.split('-').reverse().join('-');\r\n    }\r\n\r\n    const showEvent = data.map((eventPrint) => {\r\n        return (\r\n            <div className=\"usernameevent\" key={eventPrint.eventName}>\r\n                <h3>{eventPrint.eventName}</h3>\r\n                <p><span>{eventPrint.description}</span></p>\r\n                <p><span>{convertDateFormat(eventPrint.date)}</span></p>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const showGuests = guests.map((guest) => {\r\n        return (\r\n            <item>\r\n                <div className=\"tarjetamsn\" key={guest.guestName}>\r\n                    <div className=\"cabecera\">\r\n                        <div className=\"foto\">\r\n                            <FontAwesomeIcon icon={faUserFriends} size=\"3x\" className=\"faPlus2\" />\r\n                        </div>\r\n                        <div className=\"nombre\">\r\n                            <h3>{guest.guestName}</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"texto\">\r\n                        <p className=\"texto\">Estado: <span className=\"upper\">{guest.state}</span></p>\r\n                    </div>\r\n                </div>\r\n            </item>\r\n        );\r\n    });\r\n\r\n    const printStar = (star) =>{\r\n        const firstStar = {\r\n            size: 30,\r\n            value: star,\r\n            color: \"#C0C0C0\",\r\n            activeColor: \"#E18A07\",\r\n            \r\n            edit: false\r\n          };\r\n        return(\r\n            <ReactStars {...firstStar} />\r\n        )\r\n      };\r\n\r\n    const showGifts = gifts.map((gift) => {\r\n        if (gift.state === \"libre\") {\r\n            return (\r\n                <item>\r\n                    <div className=\"tarjeta\" key={gift.description}>\r\n                        <div className=\"cabecera\">\r\n                            <div className=\"foto\">\r\n                                <FontAwesomeIcon icon={faGift} size=\"3x\" className=\"faPlus2\" />\r\n                            </div>\r\n                            <div className=\"nombre\">\r\n                                <h3>{gift.description}</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"texto\">\r\n                            <h5>Asignado: <span className=\"upper\">{gift.state}</span></h5>\r\n                            {printStar(gift.rank)}\r\n                            <p className=\"texto\">Precio: <span>{gift.price}€</span></p>\r\n                        </div>\r\n                        <div className=\"footer\">\r\n                            <div>\r\n                                <OverlayTrigger\r\n                                    key='bottom'\r\n                                    placement='bottom'\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-bottom`}>\r\n                                            <strong>Elegir</strong>.\r\n                                        </Tooltip>\r\n                                    } >\r\n                                    <p variant=\"secondary\"><FontAwesomeIcon icon={faCheckCircle} size=\"2x\" className=\"faPlus\" onClick={() => { chooseGift(gift._id); sendMsn(gift.user, gift.description) }} style={{ color: '#C0C0C0' }} /></p>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                </item>\r\n            );\r\n        } else if (gift.state === username){\r\n            return (\r\n                <item>\r\n                    <div className=\"tarjetamsn\" key={gift.description}>\r\n                        <div className=\"cabecera\">\r\n                            <div className=\"foto\">\r\n                                <FontAwesomeIcon icon={faGift} size=\"3x\" className=\"faPlus2\" />\r\n                            </div>\r\n                            <div className=\"nombre\">\r\n                                <h3>{gift.description}</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"texto\">\r\n                            <h5>Asignado: <span className=\"upper\">{gift.state}</span></h5>\r\n                            <p>{gift.price}€</p>\r\n                            {printStar(gift.rank)}\r\n                        </div>\r\n                        <div className=\"footer\">\r\n                            <div className=\"foto\">\r\n                                <OverlayTrigger\r\n                                    key='bottom'\r\n                                    placement='bottom'\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-bottom`}>\r\n                                            <strong>Elegido</strong>.\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <p variant=\"secondary\"><FontAwesomeIcon icon={faTimesCircle} size=\"2x\" className=\"faPlus2 choose\" style={{ color: '#C0C0C0' }} /></p>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n                            <div className=\"foto\">\r\n                                <OverlayTrigger\r\n                                    key='bottom'\r\n                                    placement='bottom'\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-bottom`}>\r\n                                            <strong>Pagar</strong>.\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <p variant=\"secondary\"><FontAwesomeIcon icon={faCreditCard} size=\"2x\" className=\"faPlus\" onClick={() => setMpayShow(true)} style={{ color: '#C0C0C0' }} /></p>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                </item>\r\n            );\r\n        }else {\r\n            return (\r\n                <item>\r\n                    <div className=\"tarjetamsn\" key={gift.description}>\r\n                        <div className=\"cabecera\">\r\n                            <div className=\"foto\">\r\n                                <FontAwesomeIcon icon={faGift} size=\"3x\" className=\"faPlus2\" />\r\n                            </div>\r\n                            <div className=\"nombre\">\r\n                                <h3>{gift.description}</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"texto\">\r\n                            <h5>Asignado: <span className=\"upper\">{gift.state}</span></h5>\r\n                            <p>{gift.price}€</p>\r\n                            {printStar(gift.rank)}\r\n                        </div>\r\n                        <div className=\"footer\">\r\n                            <div className=\"foto\">\r\n                                <OverlayTrigger\r\n                                    key='bottom'\r\n                                    placement='bottom'\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-bottom`}>\r\n                                            <strong>Elegido</strong>.\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <p variant=\"secondary\"><FontAwesomeIcon icon={faTimesCircle} size=\"2x\" className=\"faPlus2 choose\" style={{ color: '#C0C0C0' }} /></p>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <hr></hr>\r\n                </item>\r\n            ); \r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n            <div className=\"containerModal\">\r\n            <header>\r\n                <nav>\r\n                    <ul>\r\n                        <Link to={`/Main`}><div className=\"imgNav\">\r\n                            <img src=\"../../LogoPG.png\" alt=\"Perfect Gift\"></img>\r\n                            {today}\r\n                        </div></Link>\r\n                        <div>\r\n                            <h1 className=\"username\">{username}</h1>\r\n                        </div>\r\n                        <div className=\"navIcons\">\r\n                            <div>\r\n                                <OverlayTrigger\r\n                                    key='bottom'\r\n                                    placement='bottom'\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-bottom`}>\r\n                                            <strong>Menú Principal</strong>.\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <Link to={`/Main`}><p variant=\"secondary\"><FontAwesomeIcon icon={faChevronCircleRight} size=\"3x\" className=\"faPlus\" style={{ color: '#C0C0C0' }} /></p></Link>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n                            <div>\r\n                                <OverlayTrigger\r\n                                    key='bottom'\r\n                                    placement='bottom'\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-bottom`}>\r\n                                            <strong>Salir</strong>.\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <Link to={`/`}><p variant=\"secondary\"><FontAwesomeIcon icon={faSignOutAlt} size=\"3x\" className=\"faPlus\" onClick={() => { props.back() }} style={{ color: '#C0C0C0' }} /></p></Link>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n                        </div>\r\n                    </ul>\r\n                </nav>\r\n            </header>\r\n            <div className=\"justify-content-center\">\r\n                {showEvent}\r\n            </div>\r\n            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"justify-content-center margen\">\r\n                <Tab eventKey=\"profile\" title=\"Invitados\">\r\n                    <div className=\"centrartab\">\r\n                        <hr></hr>\r\n                        <h3 className=\"username\">Invitados</h3>\r\n                        <hr></hr>\r\n                        <Carousel itemsToShow={3} itemPadding={[10, 50]}>\r\n                            {showGuests}\r\n                        </Carousel>\r\n                        <hr></hr>\r\n                    </div>\r\n                </Tab>\r\n                <Tab eventKey=\"home\" title=\"Regalos\">\r\n                    <div className=\"centrartab\">\r\n                        <hr></hr>\r\n                        <h3 className=\"username\">Regalos</h3>\r\n                        <hr></hr>\r\n                        <Carousel itemsToShow={3} itemPadding={[10, 50]}>\r\n                            {showGifts}\r\n                        </Carousel>\r\n                        <hr></hr>\r\n                    </div>\r\n                </Tab>\r\n            </Tabs>\r\n            <div>\r\n                <Modal\r\n                    size=\"sm\"\r\n                    show={mpayShow}\r\n                    onHide={() => setMpayShow(false)}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <div>\r\n                        <div className=\"login-box\">\r\n                            <h2>Pagar Regalo</h2>\r\n                            <form>\r\n                                <div className=\"user-box\">\r\n                                <PaymentForm/>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default GuestEvent;","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\Footer.js",["68"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faAt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footerWeb\">\r\n            <div className=\"footerWebIN\">\r\n                <a href=\"mailto:danieldelsermartin@gmail.com\"><FontAwesomeIcon icon={faAt} size=\"3x\" className=\"faPlus\" /></a> <p>danieldelsermartin@gmail.com</p>\r\n            </div>\r\n            <div className=\"footerWebIN\">\r\n                <a href=\"https://www.linkedin.com/in/daniel-del-ser-mart%C3%ADn/\" target=\"_blank\"><FontAwesomeIcon icon={faLinkedin} size=\"3x\" className=\"faPlus\" /></a> <p>linkedin.com/in/daniel-del-ser-martín</p>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\PaymentForm.js",["69"],"import React from \"react\";\r\nimport Card from \"react-credit-cards\";\r\nimport swal from 'sweetalert'\r\n\r\n\r\nimport {\r\n  formatCreditCardNumber,\r\n  formatCVC,\r\n  formatExpirationDate,\r\n  formatFormData\r\n} from \"./utils\";\r\n\r\nimport \"react-credit-cards/es/styles-compiled.css\";\r\n\r\nconst createAlert = (info) => {\r\n    swal(info, {\r\n        icon: \"success\",\r\n        button: false,\r\n        timer: \"300\"\r\n    });\r\n}\r\n\r\nexport default class PaymentForm extends React.Component {\r\n  state = {\r\n    number: \"\",\r\n    name: \"\",\r\n    expiry: \"\",\r\n    cvc: \"\",\r\n    issuer: \"\",\r\n    focused: \"\",\r\n    formData: null\r\n  };\r\n\r\n  \r\n\r\n  handleCallback = ({ issuer }, isValid) => {\r\n    if (isValid) {\r\n      this.setState({ issuer });\r\n    }\r\n  };\r\n\r\n  handleInputFocus = ({ target }) => {\r\n    this.setState({\r\n      focused: target.name\r\n    });\r\n  };\r\n\r\n  handleInputChange = ({ target }) => {\r\n    if (target.name === \"number\") {\r\n      target.value = formatCreditCardNumber(target.value);\r\n    } else if (target.name === \"expiry\") {\r\n      target.value = formatExpirationDate(target.value);\r\n    } else if (target.name === \"cvc\") {\r\n      target.value = formatCVC(target.value);\r\n    }\r\n\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { issuer } = this.state;\r\n    const formData = [...e.target.elements]\r\n      .filter(d => d.name)\r\n      .reduce((acc, d) => {\r\n        acc[d.name] = d.value;\r\n        return acc;\r\n      }, {});\r\n\r\n    this.setState({ formData });\r\n    this.form.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number, expiry, cvc, focused, issuer, formData } = this.state;\r\n\r\n    return (\r\n      <div key=\"Payment\">\r\n        <div className=\"App-payment\">\r\n          <Card\r\n            number={number}\r\n            name={name}\r\n            expiry={expiry}\r\n            cvc={cvc}\r\n            focused={focused}\r\n            callback={this.handleCallback}\r\n            />\r\n            <hr></hr>\r\n          <form ref={c => (this.form = c)} onSubmit={this.handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                className=\"form-control\"\r\n                placeholder=\"Número de Tarjeta\"\r\n                pattern=\"[\\d| ]{16,22}\"\r\n                required\r\n                onChange={this.handleInputChange}\r\n                onFocus={this.handleInputFocus}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className=\"form-control\"\r\n                placeholder=\"Nombre\"\r\n                required\r\n                onChange={this.handleInputChange}\r\n                onFocus={this.handleInputFocus}\r\n              />\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"expiry\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Válida hasta\"\r\n                  pattern=\"\\d\\d/\\d\\d\"\r\n                  required\r\n                  onChange={this.handleInputChange}\r\n                  onFocus={this.handleInputFocus}\r\n                />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <input\r\n                  type=\"tel\"\r\n                  name=\"cvc\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"CVC\"\r\n                  pattern=\"\\d{3,4}\"\r\n                  required\r\n                  onChange={this.handleInputChange}\r\n                  onFocus={this.handleInputFocus}\r\n                />\r\n              </div>\r\n            </div>\r\n            <input type=\"hidden\" name=\"issuer\" value={issuer} />\r\n            <div className=\"form-actions\">\r\n              <button className=\"btn btn-outline-primary btn-lg naranjaModal\" onClick={()=>{if (name !== \"\")createAlert(\"Regalo Pagado\")}}>Pagar</button>\r\n            </div>\r\n          </form>\r\n          {formData && (\r\n            <div className=\"App-highlight\">\r\n              {formatFormData(formData).map((d, i) => (\r\n                <div key={i}>{d}</div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\HDVZi\\Desktop\\CursoBootcamp\\Proyecto Final\\Perfect Gift\\cliente\\src\\utils.js",[],["70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":273,"column":26,"nodeType":"78","messageId":"79","endLine":273,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":318,"column":8,"nodeType":"82","endLine":318,"endColumn":28,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":381,"column":56,"nodeType":"86","messageId":"87","endLine":381,"endColumn":58},{"ruleId":"88","severity":1,"message":"89","line":383,"column":13,"nodeType":"90","messageId":"91","endLine":470,"endColumn":14},{"ruleId":"72","replacedBy":"92"},{"ruleId":"74","replacedBy":"93"},{"ruleId":"80","severity":1,"message":"94","line":108,"column":8,"nodeType":"82","endLine":108,"endColumn":10,"suggestions":"95"},{"ruleId":"80","severity":1,"message":"96","line":59,"column":8,"nodeType":"82","endLine":59,"endColumn":10,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":12,"column":83,"nodeType":"100","endLine":12,"endColumn":98},{"ruleId":"101","severity":1,"message":"102","line":62,"column":13,"nodeType":"103","messageId":"104","endLine":62,"endColumn":19},{"ruleId":"72","replacedBy":"105"},{"ruleId":"74","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'search' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["109"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["107"],["108"],"React Hook useEffect has missing dependencies: 'event' and 'username'. Either include them or remove the dependency array.",["110"],"React Hook useEffect has missing dependencies: 'event' and 'gifts'. Either include them or remove the dependency array.",["111"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'issuer' is assigned a value but never used.","Identifier","unusedVar",["107"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [first, eventSearch, search, username]",{"range":"118","text":"119"},"Update the dependencies array to be: [event, username]",{"range":"120","text":"121"},"Update the dependencies array to be: [event, gifts]",{"range":"122","text":"123"},[9995,10015],"[first, eventSearch, search, username]",[3315,3317],"[event, username]",[2041,2043],"[event, gifts]"]